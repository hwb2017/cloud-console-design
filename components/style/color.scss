@use "sass:math";
@use "sass:map";

$--colors: () !default;
$--colors: map.deep-merge(
    $--colors,
    (
        'white': #ffffff,
        'black': #000000,
        'orange': (
            'base': #ff6a00,
        ),
        'blue': (
            'base': #0064c8,
        ),
        'lime': (
            'base': #abebac,
        ),
        'grey': (
            'base': #bfbfbf,
        ),
    )
);

$--color-white: map.get($--colors, 'white');
$--color-black: map.get($--colors, 'black');
$--color-primary: map.get($--colors, 'orange', 'base');

@mixin set-color-light($color, $level) {
    $--colors: map.deep-merge(
        $--colors,
        (
            $color: (
                'light-#{$level}':
                mix($--color-white, $color, math.percentage(math.div($level, 10))),
            ),
        )
    );
}

@mixin set-color-shade($color, $level) {
    $--colors: map.deep-merge(
        $--colors,
        (
            $color: (
                'shade-#{$level}':
                mix($--color-black, $color, math.percentage(math.div($level, 10))),
            ),
        )
    );
}

@each $color in (orange, blue, lime, green) {
    @for $i from 1 through 5 {
        @include set-color-light($color, $i);
        @include set-color-shade($color, $i);
    }
}

$--text-color: () !default;
$--text-color: map.merge(
  (
    'primary': #303133,
    'regular': #606266,
    'secondary': #909399,
    'placeholder': #c0c4cc,
  ),
  $--text-color
);

$--border-color: () !default;
$--border-color: map.merge(
  (
    'base': #dcdfe6,
    'light': #e4e7ed,
    'lighter': #ebeef5,
    'extra-light': #f2f6fc,
  ),
  $--border-color
);